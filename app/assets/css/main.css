@import "tailwindcss";
@import "@nuxt/ui";

@theme static {
    --font-sans: "Onest", sans-serif;
    --font-serif: "Onest", sans-serif;

    --animate-hero-main-text-appear: hero-main-text-appear 2s cubic-bezier(0.45,0.01,0.11,0.99);
    @keyframes hero-main-text-appear {
        0% {
            opacity: 0;
            transform: translateY(20px);
        }
        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }

    --animate-hero-selected-text-appear: hero-selected-text-appear 2.3s cubic-bezier(0.45,0.01,0.11,0.99);
    @keyframes hero-selected-text-appear {
        0%,
        10% {
            opacity: 0;
            transform: translateY(20px);
        }
        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }
}

:root {
  --ui-primary: black;
  --ui-bg: var(--color-amber-50);
  --ui-text: black;
  --ui-secondary: #FF3C00;
}

.dark {
  --ui-primary: var(--color-amber-50);
  --ui-bg: #0F0F0F;
  --ui-text: var(--color-amber-50);
  --ui-secondary: #FF3C00;
}

@layer base {  
    .cover-noise::after {
        content: '';
        background: url(/assets/images/broken_noise.png);
        position: absolute;
        top: -50%;
        left: -50%;
        width: 400%;
        height: 400%;
        opacity: 0.8;
        animation: noiseFX 2s steps(4) infinite;
        filter: brightness(805%);
        mix-blend-mode: multiply;
        opacity: 0.3;
        pointer-events: none;
    }

    .cover-noise-darker::after {
        filter: brightness(705%);
        mix-blend-mode: multiply;
        opacity: 0.35;
    }

    .cover-noise-semi-darker::after {
        filter: brightness(805%);
        mix-blend-mode: multiply;
        opacity: 0.3;
    }

    .cover-noise-semi-lighter::after {
        filter: brightness(505%);
        mix-blend-mode: hard-light;
        opacity: 0.3;
    }

    .cover-noise-semi-semi-lighter::after {
        filter: brightness(705%);
        mix-blend-mode: hard-light;
        opacity: 0.15;
    }

    .cover-noise-lighter::after {
        mix-blend-mode: soft-light;
        filter: brightness(505%);
    }

    @keyframes noiseFX {
        0%,
        100% {
            transform: translate(0, 0);
        }
        10% {
            transform: translate(-5%, -10%);
        }
        30% {
            transform: translate(3%, -15%);
        }
        50% {
            transform: translate(12%, 9%);
        }
        70% {
            transform: translate(9%, 4%);
        }
        90% {
            transform: translate(-1%, 7%);
        }
    }
}